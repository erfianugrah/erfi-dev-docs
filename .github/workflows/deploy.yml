name: Build and Deploy

on:
  push:
    branches: [main]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Bun environment
        uses: oven-sh/setup-bun@v1
      
      - name: Cache dependencies
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: |
            ~/.bun/install/cache
            node_modules
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-deps-${{ hashFiles('**/bun.lockb', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-
      
      - name: Cache Astro build
        uses: actions/cache@v4
        with:
          path: .astro
          key: ${{ runner.os }}-astro-${{ hashFiles('src/**', 'public/**', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-astro-
      
      - name: Install project dependencies
        run: bun install
      
      - name: Install Playwright browsers
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: bunx playwright install --with-deps chromium
      
      - name: Build project
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            attempt=1
            max_attempts=3
            until bun run build || [ $attempt -eq $max_attempts ]; do
              echo "Build attempt $attempt failed. Retrying in 30 seconds..."
              sleep 30
              attempt=$((attempt + 1))
            done
            if [ $attempt -eq $max_attempts ] && ! bun run build; then
              echo "Build failed after $max_attempts attempts."
              exit 1
            fi
          else
            bun run build
          fi
      
      # SIMPLE VERSION - Let Wrangler auto-detect git info
      - name: Deploy to Cloudflare Pages
        if: |
          github.ref == 'refs/heads/main' || 
          startsWith(github.ref, 'refs/tags/v') || 
          github.event_name == 'workflow_dispatch'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_WRANGLER_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: |
            pages deploy dist \
              --project-name=erfi-dev-docs \
              --branch=${{ startsWith(github.ref, 'refs/tags/v') && 'production' || 'main' }}
          wranglerVersion: '4.28.1'
          packageManager: bun
      
      - name: Purge Cloudflare Cache
        if: |
          (github.ref == 'refs/heads/main' || 
           startsWith(github.ref, 'refs/tags/v') || 
           github.event_name == 'workflow_dispatch') && 
          success()
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            data='{"purge_everything":true}'
          else
            data='{"hosts":["erfi.dev"]}'
          fi
          
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data "$data"

