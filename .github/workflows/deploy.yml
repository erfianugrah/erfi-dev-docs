name: Deploy to Cloudflare Pages

on:
  # Run only when the build workflow completes successfully
  workflow_run:
    workflows: ["Build and Test"]
    types:
      - completed
    branches: [main]
  
  # Allow manual deployment
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Cache dependencies and build artifacts
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .astro
            dist
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}-${{ hashFiles('src/**') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/package.json') }}-
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers for rehype-mermaid
        run: npx playwright install --with-deps chromium
      
      - name: Build with retry mechanism
        env:
          MAX_ATTEMPTS: 3
          RETRY_INTERVAL: 30
        run: |
          attempt=1
          until npm run build || [ $attempt -eq $MAX_ATTEMPTS ]; do
            echo "Build attempt $attempt failed. Retrying in $RETRY_INTERVAL seconds..."
            sleep $RETRY_INTERVAL
            attempt=$((attempt + 1))
          done
          
          if [ $attempt -eq $MAX_ATTEMPTS ] && ! npm run build; then
            echo "Build failed after $MAX_ATTEMPTS attempts."
            exit 1
          fi
      
      - name: Get git information
        id: git-info
        run: |
          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_OUTPUT
          echo "COMMIT_DIRTY=$(if [[ -n $(git status -s) ]]; then echo true; else echo false; fi)" >> $GITHUB_OUTPUT
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_WRANGLER_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=erfi-dev-docs --commit-hash "${{ steps.git-info.outputs.COMMIT_HASH }}" --commit-message "${{ steps.git-info.outputs.COMMIT_MESSAGE }}" --branch "${{ steps.git-info.outputs.BRANCH_NAME }}" --commit-dirty ${{ steps.git-info.outputs.COMMIT_DIRTY }}
          wranglerVersion: '4.14.1'
      
      - name: Purge Cloudflare Cache
        if: success()
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
            -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_CACHE_PURGE_TOKEN }}" \
            -H "Content-Type: application/json" \
            --data '{"hosts":["erfi.dev"]}'